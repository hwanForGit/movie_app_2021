{"version":3,"sources":["Movies.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+RAkCeA,MA9Bf,YAA6D,EAA5CC,GAA6C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACjD,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACGD,GACCA,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACT,oBAAgBL,UAAU,iBAA1B,SACGI,GADMC,QAKf,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,gBC0NOC,G,kNA9CbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,yEALV,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAGZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IANzB,2C,uDASZ,WACEQ,KAAKN,c,oBAGP,WACE,MAA8BM,KAAKT,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OAEnB,OACE,yBAASV,UAAU,YAAnB,SACGS,EACC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAACe,EAAOb,GAAR,OACV,cAAC,EAAD,CACEX,GAAIwB,EAAMxB,GACVC,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAMC,mBACdpB,OAAQmB,EAAMnB,oB,GArCZqB,IAAMC,YC1LxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7500cc66.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Movie.css';\r\n\r\nfunction Movie({ id, year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className='movie'>\r\n      <img src={poster} alt={title} title={title} />\r\n      <div className='movie__data'>\r\n        <h3 className='movie__title'>{title}</h3>\r\n        <h5 className='movie__year'>{year}</h5>\r\n        <ul className='movie__genres'>\r\n          {genres &&\r\n            genres.map((genre, index) => (\r\n              <li key={index} className='generes__genre'>\r\n                {genre}\r\n              </li>\r\n            ))}\r\n        </ul>\r\n        <p className='movie__summary'>{summary.slice(0, 180)}...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.array\r\n};\r\n\r\nexport default Movie;\r\n","import React from 'react';\nimport axios from 'axios';\nimport Movie from './Movies';\nimport './App.css';\n\n/*\nconst foodILike = [\n  {\n    id : 1,\n    name : \"Kimchi\",\n    image : \"https://www.thinkfood.co.kr/news/photo/202011/89192_115694_99.jpg\",\n    rating : 5\n  },\n  {\n    id: 2,\n    name : \"Samgyeopsal\",\n    image : \"https://post-phinf.pstatic.net/MjAyMDAzMDNfMTcg/MDAxNTgzMTkwNjA3ODQ5.kUXPHqGJ2xPDSu_3FiEoFC3kY9QyQ_g9CziCGrFSDuEg.LpCfOTbc5qth9d-GKzGv9jwj2VKhcqmPHp5cp1KJYEsg.JPEG/IM_food02.jpg?type=w1200\",\n    rating: 4.3\n  },\n  {\n    id: 3,\n    name : \"Bibimbap\",\n    image : \"https://mblogthumb-phinf.pstatic.net/MjAxNzA0MjRfMjky/MDAxNDkzMDIzMjY5MjY5.u5q3w1Cl1wjxJoRzSpczd_VT2rScn_zaDV5LfKVMa6Mg.Tz5B-6i_SYH4yydceeZT6bNwDs-P5srXOE2uCDQ_Disg.JPEG.estelle926/151435979-56a57a083df78cf772888a61.jpg?type=w800\",\n    rating: 3\n  },\n];\n\nfunction Food({name, picture, rating}) {\n  return (\n    <div>\n      <h2>I like {name}</h2>\n      <h4>{rating}/5.0</h4>\n      <img src={picture} alt={name}/>\n    </div>\n  );\n}\n\n// 이름은 필수로 propTypes로 정해야 함\nFood.propTypes = {\n  name: PropTypes.string,\n  picture: PropTypes.string,\n  rating: PropTypes.number,  // isRequired가 없으면 undefined일 경우 에러가 나지 않음(있어도 되고 없어도)\n}\n\n// 함수로 넣고 싶을 때///////\nfunction renderFood(dish) {\n  return (\n    <Food \n      key={dish.id} \n      name={dish.name} \n      picture={dish.image} \n      rating={dish.rating}\n    />\n  );\n}\n///////////////////////////\n\nfunction App() {\n  return (\n    <div>\n      {foodILike.map(dish => \n        <Food \n          key={dish.id}\n          name={dish.name}\n          picture={dish.image}\n          rating={dish.rating}\n        />\n        )}\n    </div>\n  );\n}\n*/\n\n// life cycle method : react가 component를 생성하고 없애는 방법\n// Mounting, Updating, Unmounting(Component가 죽음)\n// Mounting\n//  1. constructor()\n//  2. render()\n\n/*\nclassName App extends React.Component {\n  // Component의 데이터를 넣음\n  // state는 object\n  // 변수를 state 안에 작성\n  \n  constructor(props) {\n    super(props);\n    console.log(\"Constructor Hello\");\n  }\n\n  state = {\n    count: 0\n  };\n\n  add = () => {\n    this.setState(current => ({count : current.count + 1}));\n  }\n\n  minus = () => {\n    this.setState(current => ({count : current.count - 1}));\n  }\n\n  componentDidMount() {\n    console.log(\"Component rendered\");\n  }\n\n  // Component Update --> render --> componentDidUpdate\n  componentDidUpdate() {\n    console.log(\"I just updated\");\n  }\n\n  // Component가 떠날 때 호출\n  componentWillUnmount() {\n    console.log(\"Goodbye, cruel world\");\n  }\n\n  // 자동 실행\n  render() {\n    console.log(\"I'm a rendering\");\n    return (\n      <div>\n        <h1>The number is: {this.state.count}</h1>\n        <button onClick={this.add}>ADD</button>\n        <button onClick={this.minus}>MINUS</button>\n      </div>\n    );\n  }\n}\n*/\n\n/*\n// 예시 movie api : https://yts-proxy.nomadcoders1.now.sh/list_movies.json\n// axios 설치 : npm i axios\nclassName App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n\n  // 비동기 세팅\n  // async와 await\n  getMovies = async () => {\n    // axios를 기다렸다가 계속 해\n    const {\n      data: {\n        data: { movies }\n      }\n    } = await axios.get('https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating');\n    this.setState({ movies, isLoading: false });\n  };\n\n  // componentDidMount에서 data를 fetch\n  componentDidMount() {\n    // setTimeout(function() { }, 2000);\n    //             실행할 함수, 대기시간\n    //setTimeout(()=>{\n    //  this.setState({isLoading: false});\n    //}, 6000);\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className='container'>\n        {isLoading ? (\n          <div className='loader'>\n            <span className='loader__text'>Loading...</span>\n          </div>\n        ) : (\n          <div className='movies'>\n            {movies.map(movie => (\n              <Movie\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n*/\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies }\n      }\n    } = await axios.get('https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating');\n    this.setState({ movies, isLoading: false });\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n\n    return (\n      <section className='container'>\n        {isLoading ? (\n          <div className='loader'>\n            <span className='loader__text'>Loading...</span>\n          </div>\n        ) : (\n          <div className='movies'>\n            {movies.map((movie, index) => (\n              <Movie\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}